<div class="col-span-2 sm:col-span-1">
                        <label for="category" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Skills</label>
                        <select id="category" name="skill[]" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500 js-example-tags" multiple="multiple" style="width: 100%;">
                        
                            <!-- <option selected="slt">select skills</option> -->
                            @foreach ($skills as $skill)

                            <option value="{{$skill}}">{{$skill->skill}}</option>

                            @endforeach
                        
                        </select>
                    </div>















public function assign_skill(Request $request)
{
    // Retrieve the skill objects array
    $skillObjects = $request->input('skill');

    // Convert the JSON strings back to arrays
    $decodedSkills = array_map('json_decode', $skillObjects);

    // Modify the skill objects to remove unwanted fields
    $modifiedSkills = array_map(function($skill) {
        unset($skill->updated_at, $skill->moh, $skill->created_at);
        return $skill;
    }, $decodedSkills);

    // Convert the modified array to a JSON string
    $serializedSkillIds = json_encode($modifiedSkills);




    
$dataAry = json_decode($serializedSkillIds, true);

$result = [];
foreach ($dataAry as $item) {
    $result[$item['id']] = $item['skill'];
}

// Convert the array to JSON
$jsonResult = json_encode($result);








    // Retrieve the agent ID
    $agentId = $request->input('user_id');

    // Create the data array for insertion
    $data = [
        'agent_id' => $agentId,
        'skills' => $jsonResult,
        'skill_ids' => $jsonResult
    ];

    // Create a new record in the database
    $newRecord = ad_agentSkill::create($data);

    // Redirect to the skills route
    return redirect(route('skills'));
}


















*************this also correct




public function assign_skill(Request $request)
{
    // Retrieve the skill objects array
    $skillObjects = $request->input('skill');
    // dd($skillObjects);
    // Convert the JSON strings back to arrays
    $decodedSkills = array_map('json_decode', $skillObjects);
    // dd($decodedSkills);
    // Modify the skill objects to remove unwanted fields
    $modifiedSkills = array_map(function($skill) {
        unset($skill->updated_at, $skill->moh, $skill->created_at);
        return $skill;

    }, $decodedSkills);

    //return only skills
    $onlySkills = array_map(function($skill) {
        
        return $skill->skill;
        
    }, $decodedSkills);

    // Convert the modified array to a JSON string
    //$serializedSkillIds = json_encode($modifiedSkills);
    // $serializedSkills = json_encode($onlySkills);
    $serializedSkills = implode(', ', $onlySkills);
    
//$dataAry = json_decode($serializedSkillIds, true);

$result = [];
foreach ($modifiedSkills as $item) {
    //$result[$item['id']] = $item['skill']; // access properties of array
    $result[$item->id] = $item->skill;     // access properties of object
}

// Convert the array to JSON
$jsonResult = json_encode($result);

    // Retrieve the agent ID
    $agentId = $request->input('user_id');

    // Create the data array for insertion
    $data = [
        'agent_id' => $agentId,
        'skills' => $serializedSkills,
        'skill_ids' => $jsonResult
    ];

    // Create a new record in the database
    $newRecord = ad_agentSkill::create($data);

    // Redirect to the skills route
    return redirect(route('skills'));
}