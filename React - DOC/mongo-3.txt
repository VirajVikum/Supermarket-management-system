mongodb atlas


npm i mongoose



add app.js's imported and middlewares to server.js , add uri and set password


const express = require('express');
const app = express();
const cors = require('cors');

const mongoose = require('mongoose');

const port =3001;
const host ='127.0.0.1'; // 'http://localhost' also correct

app.use(cors());
app.use(express.json());

const uri ="mongodb+srv://root:<mongodbpassword>@cluster0.xbeajqc.mongodb.net/?retryWrites=true&w=majority";

const connect = async () => {
    try{
        await mongoose.connect(uri);
        console.log("Connected successfully...");
    }
    catch(error){
        console.log("Not Connected",error);
    }
};

connect();

const server= app.listen(port,host,()=>{     
    console.log(`node server listning to ${server.address().port}`)
}
); 








create (model.js)

const mongoose = require('mongoose');
const Schema =mongoose.Schema;

const userSchema = new Schema({
    id:Number,
    name:String,
});

const User = mongoose.model('User',userSchema);

module.exports = User;







in(controller.js)


const { response } = require('./app');
const User = require('./model');

const getUsers=(req,res,next)=>{
    User.find()
        .then(response =>{ //javascript promises
            res.json({response})
        })
        .catch(error =>(
            res.json({error})
        ))
};

const addUsers = (req,res,next)=>{
    const user = new User({
        id:req.body.id,
        name:req.body.name
    });
    user.save()
        .then(response =>{ //javascript promises
            res.json({response})
        })
        .catch(error =>(
            res.json({error})
        ));
};

const updateUser = (req,res,next)=>{
    // const id =req.body.id;
    // const name =req.body.name;
    // object destructuring
    const {id,name} = req.body;
    User.updateOne({id:id},{$set:{name:name}})
        .then(response =>{ //javascript promises
            res.json({response})
        })
        .catch(error =>(
            res.json({error})
        ));
}

const deleteUser = (req,res,next)=>{
    const id = req.body.id;
    User.deleteOne({id:id})
        .then(response =>{ //javascript promises
            res.json({response})
        })
        .catch(error =>(
            res.json({error})
        ));
}

exports.getUsers=getUsers;
exports.addUsers=addUsers;
exports.updateUser=updateUser;
exports.deleteUser=deleteUser;








in(app.js)


const express = require('express');
const app = express();
const cors = require('cors');
const controller= require('./controller')

app.use(cors()); //middleware to use when request and responces

app.use( //middleware that decrypt data that sent from html pages(send data as decrypted)
    express.urlencoded({
        extended:true,
    })
)

app.use(express.json()); //middleware to request/response data by json format




//rest apis

app.get('/users',(req,res)=>{
    controller.getUsers(req,res,next =>{
        res.send();
    });
});


app.post('/createuser',(req,res)=>{
    controller.addUsers(req.body,(callback)=>{
        res.send();
    });
});


app.post('/updateuser',(req,res)=>{
    controller.updateUser(req.body,(callback)=>{
        res.send(callback);
    });
});



app.post('/deleteuser',(req,res)=>{
    controller.deleteUser(req.body,(callback)=>{
        res.send(callback);
    });
});

module.exports=app;








create(router.js)


const express = require("express");
const router = express.Router();
const controller = require('./controller');

router.get("/users",controller.getUsers);
router.post("/createusers",controller.addUsers);
router.post("/updateusers",controller.updateUser);
router.post("/deleteusers",controller.deleteUser);

module.exports=router;






in(server.js)


const express = require('express');
const app = express();
const cors = require('cors');
const router = require('./router');

const mongoose = require('mongoose');

const port =3001;
const host ='127.0.0.1'; // 'localhost' also correct

app.use(cors());
app.use(express.json());

const uri ="mongodb+srv://root:mongodbpassword@cluster0.xbeajqc.mongodb.net/?retryWrites=true&w=majority";

const connect = async () => {
    try{
        await mongoose.connect(uri);
        console.log("Connected successfully...");
    }
    catch(error){
        console.log("Not Connected",error);
    }
};

connect();

const server= app.listen(port,host,()=>{     
    console.log(`node server listning to ${server.address().port}`)
}
); 


app.use('/api',router);







run server-------> nodemon ./server.js






use postman to TEST--->


new --> HTTP --> GET/POST... --> enter url --> send

new --> HTTP --> POST... --> Body --> raw --> JSON --> enter data-->
{
    "id":1,
    "name":"viraj"
}
--> enter url --> send